apply plugin: 'java'
apply plugin: 'maven'

group='com.codeborne'
archivesBaseName = 'selenide'
version='2.4-SNAPSHOT'

compileJava.options.debugOptions.debugLevel = "source,lines,vars"
sourceCompatibility = 1.5
targetCompatibility = 1.5

defaultTasks 'libs', 'test', 'install'

repositories {
  mavenCentral()
}

configurations {
  provided
  compile.extendsFrom provided
}

dependencies {
  compile('org.seleniumhq.selenium:selenium-java:2.35.0') {
    exclude group: 'org.seleniumhq.selenium', module: 'selenium-htmlunit-driver'
    exclude group: 'org.seleniumhq.selenium', module: 'selenium-android-driver'
    exclude group: 'org.seleniumhq.selenium', module: 'selenium-iphone-driver'
    exclude group: 'org.seleniumhq.selenium', module: 'selenium-safari-driver'
    exclude group: 'org.webbitserver', module: 'webbit'
  }
  provided group: 'org.seleniumhq.selenium', name: 'selenium-htmlunit-driver', version: '2.35.0', transitive: false
  provided group: 'net.sourceforge.htmlunit', name: 'htmlunit', version: '2.12', transitive: false
  testRuntime group: 'net.sourceforge.htmlunit', name: 'htmlunit', version: '2.12'
  provided 'junit:junit:4.11'
  provided 'org.testng:testng:6.8.5'
  provided group: 'com.github.detro.ghostdriver', name: 'phantomjsdriver', version: '1.0.4', transitive: false
  testCompile 'org.mockito:mockito-all:1.9.5'
}

task libs(type: Sync) {
  from configurations.compile
  from configurations.runtime
  from configurations.testCompile
  from configurations.testRuntime
  into "$buildDir/lib"
}

test {
  systemProperties['file.encoding'] = 'UTF-8'
  testLogging.showStandardStreams = true
  systemProperties['browser'] = 'htmlunit'
  maxParallelForks = 3
}

task ie(type: Test) {
  systemProperties['browser'] = 'ie'
  systemProperties['timeout'] = '8000'
  systemProperties['webdriver.ie.driver'] = 'C:/Programs/IEDriverServer.exe'
  exclude '**/AlertText.*'
  exclude '**/ConfirmTest.*'
}

task chrome(type: Test) {
  systemProperties['browser'] = 'chrome'
  systemProperties['webdriver.chrome.driver'] = '/usr/bin/chromedriver'
  maxParallelForks = 3
}

task phantomjs(type: Test) {
  systemProperties['browser'] = 'phantomjs'
  systemProperties['webdriver.chrome.driver'] = '/usr/bin/phantomjs'
}

task firefox(type: Test) {
  systemProperties['browser'] = 'firefox'
  maxParallelForks = 3
}

task allTests(dependsOn: ['clean', 'libs', 'test', 'firefox', 'chrome']) {}

task sourcesJar(type: Jar, dependsOn:classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives jar
  archives sourcesJar
  archives javadocJar
}

task wrapper(type: Wrapper) {
  gradleVersion = '1.7'
  jarFile = './gradle-wrapper/gradle-wrapper.jar'
  scriptFile = './gradle'
}
