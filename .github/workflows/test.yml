name: 'Run tests'
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  run-tests-on-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        gradle-task: [ 'check', 'edge_headless_smoke' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          cache: 'gradle'
          java-version: '17'
      - name: Setup Edge
        if: ${{ contains(matrix.gradle-task, 'edge') }}
        uses: browser-actions/setup-edge@latest
      - name: Set-DisplayResolution
        shell: pwsh
        run: Set-DisplayResolution -Width 1920 -Height 1080 -Force
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run the tests
        run: ./gradlew ${{ matrix.gradle-task }} --no-parallel --no-daemon --console=plain
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-report-win-${{matrix.gradle-task}}
          retention-days: 14
          path: |
            **/build/reports
            **/build/test-results

  run-tests-on-linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        gradle-task: [ 'check', 'firefox_headless', 'chrome_headless' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          cache: 'gradle'
          java-version: '17'
      - name: Setup Firefox
        if: ${{ matrix.gradle-task != 'check' }}
        uses: browser-actions/setup-firefox@latest
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run the tests
        run: ./gradlew ${{ matrix.gradle-task }} --no-parallel --no-daemon --console=plain
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-report-linux-${{matrix.gradle-task}}
          retention-days: 14
          path: |
            **/build/reports
            **/build/test-results

  run-android-tests:
    runs-on: ubuntu-latest
    env:
      BS_KEY: ${{ secrets.BS_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          cache: 'gradle'
          java-version: '17'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run the tests
        if: ${{ env.BS_KEY }}
        run: ./gradlew android --info -Dselenide.bs_key=${{ secrets.BS_KEY }}
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-report-android
          retention-days: 14
          path: |
            **/build/reports
            **/build/test-results

  run-ios-tests:
    runs-on: ubuntu-latest
    env:
      BS_KEY: ${{ secrets.BS_KEY }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          cache: 'gradle'
          java-version: '17'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run the tests
        if: ${{ env.BS_KEY }}
        run: ./gradlew ios --info -Dselenide.bs_key=${{ secrets.BS_KEY }}
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-report-ios
          retention-days: 14
          path: |
            **/build/reports
            **/build/test-results

  run-selenoid-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          cache: 'gradle'
          java-version: '17'
      - name: Start selenoid
        uses: BorisOsipov/selenoid-github-action@1
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run the tests
        run: ./gradlew selenoidTests
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-report-selenoid
          retention-days: 14
          path: |
            **/build/reports
            **/build/test-results

  auto-merge-dependabot:
    name: ðŸ¤– Auto merge dependabot PR
    timeout-minutes: 10
    needs: [run-tests-on-linux, run-tests-on-windows, run-android-tests, run-ios-tests, run-selenoid-tests]
    if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    steps:
      - name: ðŸ¤– Merge PR from dependabot
        uses: fastify/github-action-merge-dependabot@v3.10.2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          target: minor
          merge-method: rebase
