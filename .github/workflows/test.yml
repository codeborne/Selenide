name: Run tests
on:
  push:
    branches:
      - master
  pull_request:

concurrency:
  # On master/release, we don't want any jobs cancelled so the sha is used to name the group
  # On PR branches, we cancel the job if new commits are pushed
  # More info: https://stackoverflow.com/a/68422069/253468
  group: ${{ (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/release' ) && format('ci-main-tests-{0}', github.sha) || format('ci-main-tests-{0}', github.ref) }}
  cancel-in-progress: true

jobs:
  matrix_prep:
    name: Matrix Preparation
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    env:
      # Ask matrix.js to produce 7 jobs
      MATRIX_JOBS: 7
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 50
      - id: set-matrix
        run: |
          node .github/workflows/matrix.js

  test:
    needs: matrix_prep
    name: '${{ matrix.name }}'
    runs-on: ${{ matrix.os }}
    env:
      TZ: ${{ matrix.tz }}
    strategy:
      matrix: ${{fromJson(needs.matrix_prep.outputs.matrix)}}
      fail-fast: false
      # max-parallel: 4
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 50
      - name: Set up Java ${{ matrix.java_version }}, ${{ matrix.java_distribution }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java_version }}
          distribution: ${{ matrix.java_distribution }}
          architecture: x64
      - name: Setup Edge
        if: ${{ matrix.gradle-task == 'edge_headless' }}
        uses: browser-actions/setup-edge@latest
      - name: Setup Firefox
        if: ${{ matrix.os == 'ubuntu-latest' && (matrix.gradle-task == 'chrome_headless' || matrix.gradle-task == 'firefox_headless') }}
        run: |
          sudo add-apt-repository ppa:ubuntu-mozilla-daily/ppa
          sudo apt-get update
          sudo apt-get install firefox-trunk
      - uses: actions/cache@v2
        if: ${{ matrix.os != 'windows-latest' }}
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: gradlew ${{ matrix.gradle-task }}
        run: ./gradlew ${{ matrix.gradle-task }} --no-daemon --console=plain -i
        env:
          _JAVA_OPTIONS: ${{ matrix.testExtraJvmArgs }}
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test-report
          path: ./**/build/reports/
